// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.packt.abuzar.extractingmodel.list;

import dagger.internal.Factory;
import javax.inject.Provider;

public final class ProjectRepository_Factory implements Factory<ProjectRepository> {
  private final Provider<ProjectListModel> projectListModelProvider;

  public ProjectRepository_Factory(Provider<ProjectListModel> projectListModelProvider) {
    this.projectListModelProvider = projectListModelProvider;
  }

  @Override
  public ProjectRepository get() {
    ProjectRepository instance = new ProjectRepository();
    ProjectRepository_MembersInjector.injectProjectListModel(
        instance, projectListModelProvider.get());
    return instance;
  }

  public static Factory<ProjectRepository> create(
      Provider<ProjectListModel> projectListModelProvider) {
    return new ProjectRepository_Factory(projectListModelProvider);
  }

  public static ProjectRepository newProjectRepository() {
    return new ProjectRepository();
  }
}
