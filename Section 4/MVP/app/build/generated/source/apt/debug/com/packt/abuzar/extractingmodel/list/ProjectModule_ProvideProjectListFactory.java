// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.packt.abuzar.extractingmodel.list;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;
import javax.inject.Provider;

public final class ProjectModule_ProvideProjectListFactory implements Factory<List<ProjectModel>> {
  private final ProjectModule module;

  private final Provider<ProjectListModel> projectListModelProvider;

  public ProjectModule_ProvideProjectListFactory(
      ProjectModule module, Provider<ProjectListModel> projectListModelProvider) {
    this.module = module;
    this.projectListModelProvider = projectListModelProvider;
  }

  @Override
  public List<ProjectModel> get() {
    return Preconditions.checkNotNull(
        module.provideProjectList(projectListModelProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<List<ProjectModel>> create(
      ProjectModule module, Provider<ProjectListModel> projectListModelProvider) {
    return new ProjectModule_ProvideProjectListFactory(module, projectListModelProvider);
  }

  public static List<ProjectModel> proxyProvideProjectList(
      ProjectModule instance, ProjectListModel projectListModel) {
    return instance.provideProjectList(projectListModel);
  }
}
